[General]
network = Scenario
description = Scenario without attacker
sim-time-limit = 60.5s

*.*_car[*].ipv4.arp.typename = "GlobalArp"	# non ci interessa il funzionamento di ARP: ipotizziamo che le ARP table siano già complete

*.normal_car[1].numApps = 1
*.normal_car[1].app[0].typename = "UdpBasicApp"
*.normal_car[1].app[0].destAddresses = "normal_car[6]"
*.normal_car[1].app[0].localPort = 5000
*.normal_car[1].app[0].destPort = 5000
*.normal_car[1].app[0].messageLength = 100B
*.normal_car[1].app[0].sendInterval = 1s
*.normal_car[1].app[0].startTime = 20s
*.normal_car[1].app[0].packetName = "UDPData"

*.normal_car[*].numApps = 1
*.normal_car[*].app[0].typename = "UdpSink"
*.normal_car[*].app[0].localPort = 5000
*.normal_car[*].routing.deletePeriod = 5s

# Ieee80211Interface
#*.*_car[*].wlan[0].opMode = "p"
#*.*_car[*].wlan[0].radio.bandName = "5.9 GHz"
#*.*_car[*].wlan[0].radio.channelNumber = 3
#*.*_car[*].wlan[0].radio.transmitter.power = 20mW
#*.*_car[*].wlan[0].radio.bandwidth = 10 MHz

# AckingWirelessInterface
*.*_car[*].wlan[*].typename = "AckingWirelessInterface"
*.*_car[*].wlan[*].bitrate = 2Mbps
*.*_car[*].wlan[*].mac.headerLength = 23B
*.*_car[*].wlan[*].radio.typename = "UnitDiskRadio"
*.*_car[*].wlan[*].radio.transmitter.headerLength = 96b
*.*_car[*].wlan[*].radio.transmitter.communicationRange = 70m
*.*_car[*].wlan[*].radio.transmitter.interferenceRange = 0m
*.*_car[*].wlan[*].radio.transmitter.detectionRange = 0m
*.*_car[*].wlan[*].radio.receiver.ignoreInterference = true

# HostAutoConfigurator
*.*_car[*].ipv4.configurator.typename = "HostAutoConfigurator"
*.*_car[*].ipv4.configurator.interfaces = "wlan0"
*.*_car[*].ipv4.configurator.mcastGroups = "224.0.0.1"

# VeinsInetMobility
*.*_car[*].mobility.typename = "VeinsInetMobility"

# VeinsInetManager
*.manager.updateInterval = 0.1s
*.manager.launchConfig = xmldoc("arcavacatamap.launchd.xml")
*.manager.moduleType = "normal_car=networkprojectvanet.veins_inet.AodvCar *=networkprojectvanet.veins_inet.AodvCar"
*.manager.moduleDisplayString = "normal_car='i=veins/node/car;is=vs' *='i=veins/node/car;is=vs'"
*.manager.moduleName = "normal_car=normal_car *=normal_car"

# PhysicalEnvironment
#*.physicalEnvironment.config = xmldoc("obstacles.xml")
#*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss"

# Misc
**.vector-recording = true

*.*_car[*].wlan[0].radio.displayCommunicationRange = true

#*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

*.visualizer.networkRouteVisualizer.displayRoutes = true


#-----------------------------------------------------------------------------
[Config BHAttackScenario]
description = Senario with black hole attack

*.manager.launchConfig = xmldoc("arcavacatamap.launchd.xml")
*.manager.moduleType = "normal_car=networkprojectvanet.veins_inet.AodvCar *=networkprojectvanet.blackhole.blackhole_attack.aodv_attacker.AttackerAodvCar"
*.manager.moduleDisplayString = "normal_car='i=veins/node/car;is=vs' *='i=veins/node/car,red;is=vs'"
*.manager.moduleName = "normal_car=normal_car *=attacker_car"

*.attacker_car[*].forwarding = false	# forwarding disabilitato così che i pacchetti ricevuti e non indirizzati all'attaccante vengano droppati
*.attacker_car[*].numApps = 1
*.attacker_car[*].app[0].typename = "UdpSink"
*.attacker_car[*].app[0].localPort = 5000
*.attacker_car[*].routing.deletePeriod = 5s


#-----------------------------------------------------------------------------
[Config BHMitigationScenario]
description = Senario with black hole mitigation
extends = BHAttackScenario

*.normalCarType = "SecureAodvCar"
*.attackerCarType = "SecureAodvAttackerCar"

*.manager.moduleType = "normal_car=networkprojectvanet.blackhole.blackhole_mitigation.secure_aodv_car.SecureAodvCar *=networkprojectvanet.blackhole.blackhole_mitigation.secure_aodv_attacker.SecureAodvAttackerCar"
*.manager.moduleDisplayString = "normal_car='i=veins/node/car,green;is=vs' *='i=veins/node/car,red;is=vs'"
